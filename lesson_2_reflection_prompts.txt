What happens when you initialize a repository? Why do you need to do it?

On init I get an empty repository.  This will ensure that the repository is intialized and ony then do I actually start saving things

How is the staging area different from the working directory and the repository?
The staging area gives me a method of keeping changes in a temporary state before commiting them permanently.
The working directory is a place where I can use a current version and swap between versions from the repository

What value do you think it offers?
This offers more granularity on my changes.  The staging area lets me get an idea if all changes play well together before committing them

How can you use the staging area to make sure you have one commit per logical change?
staging allows you to put together files for committing from amoung multiple changes.  This is to be sure all changed files play together well

What are some situations when branches would be helpful in keeping your history organized? 
I will use branches to separate changes that are happening in parallel.  I will then be able to make a couple of logical changes at the same time

How would branches help?
Branches can keep logical tasks separated.  I think this will add to the ability to develop parts of a project in isolation when I get stuck and need input to finish a logical part, but I have data to finish a different logical part of my project


How do the diagrams help you visualize the branch structure?
The diagrams lets me see where parallel activity is taking place.  It also lets me see which changes are associated for a logical task

What is the result of merging two branches together?
My first attempt at branching was complete chaos.  I got stuff out of sync with the demo program.  I thought I would have to throw away everything and start over.
The example didn't go well.  I had to go forward in the lesson to understand what I did wrong.  I am not sure how I got out of sync.  I must have made a rookie mistake.

Why do we represent it in the diagram the way we do?
The diagram should help, but not making progress on the example repository.   I am sure it is supposed to show where all the changes are found.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Git's auto merge is very cryptic.  I finally found my problems and I think my repository is back on track.  I don't have much confidence in auto-merge.
I can see auto-merge could be a time saver for simple changes.  I am quite clumsy with the merge output.  I need a lot more practice.
